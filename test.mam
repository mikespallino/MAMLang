k=3
m=5

fn babyRecurse (n) [
    result = 1
    if (n == 1) [
        ret 1
    ] else [
        n1 = n - 1
        b = babyRecurse(n1)
        result = b
    ]

    ret result
]

fn printForever(num) [
    print(k)
    printForever(k)
]

fn fact(num) [
    print(num)
    sum=num
    while (num > 1) [
        num = num - 1
        sum = sum * num
    ]
    ret sum
]

val1 = fact(5)
print(val1)

val2 = babyRecurse(9)
print(val2)

if (k==3) [
    print(k)
    k=k-1
] else [
    print(k)
]
print(k)
while (k<m) [
    print(k)
    k = k + 1
]
